name: test

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql-service:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: testing
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 33306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      APP_URL: "http://127.0.0.1:8000"
      DB_CONNECTION: mysql
      DB_DATABASE: testing
      DB_HOST: 127.0.0.1
      DB_PASSWORD: password
      DB_PORT: 33306
      DB_USERNAME: root

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Laravel
        run: composer create-project laravel/laravel example-app

      - name: Setup Package
        run: |
          cd example-app
          mv composer.json composer.old.json
          node -p "JSON.stringify({ ...require('./composer.old.json'), repositories: [{ type: 'path', url: '../' }] }, null, 2)" > composer.json
          composer require "web-id/laravel-playwright @dev"
          cat composer.json

      - name: Install Playwright
        run: |
          cd example-app
          npm init playwright@latest

      - name: Create Boilerplate
        run: |
          cd example-app
          php artisan playwright:boilerplate

      - name: Run Migrations
        run: |
          cd example-app
          php artisan migrate:fresh

      - name: Start Laravel
        run: php artisan serve > /dev/null 2>&1 &

      - name: Unit & Feature tests
        run: |
          cd example-app
          php artisan test

      - name: Playwright tests
        run: |
          cd example-app
          ls tests -a
          npx playwright test

      # - name: Configure directories
      #   run: |
      #     mv .env.example .env
      #     chmod -R 777 ./storage ./bootstrap/cache

      # - name: Composer install
      #   run: composer install

      # - name: Generate application key
      #   run: php artisan key:generate

      # - name: Publish assets
      #   run: php artisan vendor:publish --force

      # - name: Run migrations
      #   run: php artisan migrate:fresh

      # - name: Unit & Feature tests
      #   run: php artisan test

      # - name: Serve application
      #   run: php artisan serve > /dev/null 2>&1 &

      # - name: Install Playwright
      #   run: npm exec playwright install --with-deps

      # - name: E2E tests
      #   run: npm test